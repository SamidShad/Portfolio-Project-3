import { useEffect, useState } from "react";
import Link from "next/link";
import { createClient } from "next-sanity";
import imageUrlBuilder from "@sanity/image-url";
import { LiaBathSolid, LiaBedSolid } from "react-icons/lia";
import { BsSlashSquare } from "react-icons/bs";
import CategoryBar from "../../components/CategoryBar";
import styles from "@/styles/properties.module.css";
import Head from "next/head";
import { motion } from "framer-motion";
import { CategoryBarText, CategoryBarAnime } from "@/lib/animation";

export const metadata = {
  title: "Steve Demos | Properties",
  description: "Generated by create next app",
};

function Properties({ all_properties }) {
  const [searchTerm, setSearchTerm] = useState("");
  const [filteredProperties, setFilteredProperties] = useState(all_properties);
  const [dropDownNames, setDropDownNames] = useState({
    price: "Price",
    bed: "Beds",
    bath: "Baths",
    type: "Type",
  });

  const builder = imageUrlBuilder({
    projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,
    dataset: "production",
  });

  useEffect(() => {
    const filtered = all_properties.filter((property) => {
      return (
        property.price == dropDownNames.price ||
        property.beds == dropDownNames.bed ||
        property.baths == dropDownNames.bath ||
        property.type == dropDownNames.type
      );
    });
    setFilteredProperties(filtered);
  }, [dropDownNames, all_properties]);

  useEffect(() => {
    const searched = all_properties.filter((property) => {
      return property.property_name
        .toLowerCase()
        .includes(searchTerm.toLowerCase());
    });
    setFilteredProperties(searched);
  }, [searchTerm, all_properties]);

  return (
    <>
      <Head>
        <title>Real Estate Agent | All Properties</title>
        <meta name="description" content="Best Real Estate Properties" />
        <meta name="keywords" content="property,best,selling" />
        <link rel="icon" href="/logo.webp" />
      </Head>
      <section className={styles.properties_section}>
        <div className={styles.banner}>
          <div className={styles.banner_items}>
            <motion.h1
              variants={CategoryBarText}
              initial="initial"
              animate="visible"
            >
              Steve Demos
            </motion.h1>
            <motion.div
              className={styles.category_bar}
              variants={CategoryBarAnime}
              initial="initial"
              animate="visible"
            >
              <input
                type="text"
                name="useraddress"
                placeholder="Search..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
              <CategoryBar
                all_properties={all_properties}
                dropDownNames={dropDownNames}
                setDropDownNames={setDropDownNames}
              />
            </motion.div>
          </div>
        </div>

        <h1>All Properties</h1>
        <div className={styles.all_properties_area}>
          <div className={styles.all_properties_container}>
            {filteredProperties.map((property, key) => {
              return (
                <div key={key} className={`property_cards ${styles.cards}`}>
                  <picture>
                    <source
                      srcSet={builder
                        .image(property.property_image[0].asset._ref)
                        .url()}
                      type="image/avif"
                    />
                    <source
                      srcSet={builder
                        .image(property.property_image[0].asset._ref)
                        .url()}
                      type="image/webp"
                    />
                    <img
                      src={builder
                        .image(property.property_image[0].asset._ref)
                        .url()}
                      alt="property_image"
                      draggable={false}
                      className={styles.testimonial_agent_image}
                    />
                  </picture>

                  <div className="property_details_container">
                    <div className="property_top_texts">
                      <Link href={`/${property.slug.current}`}>
                        <h2>{property.property_name}</h2>
                        <p>{property.property_description.slice(0, 120)}...</p>
                      </Link>
                    </div>
                    <span>${property.price}</span>
                    <div className="property_card_footer">
                      <div>
                        <LiaBedSolid size={30} />
                        <p>{property.beds}</p>
                      </div>
                      <div>
                        <LiaBathSolid size={30} />
                        <p>{property.baths}</p>
                      </div>
                      <div>
                        <BsSlashSquare size={30} />
                        <p>123</p>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      </section>
    </>
  );
}

export default Properties;

export async function getServerSideProps() {
  const client = createClient({
    projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,
    dataset: "production",
    apiVersion: "2022-03-25",
    useCdn: false,
  });

  const details = `*[_type == "properties"]`;
  const all_properties = await client.fetch(details);

  return {
    props: {
      all_properties,
    },
  };
}
